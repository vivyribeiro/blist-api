{
	"openapi": "3.0.0",
	"info": {
		"title": "Blist API",
		"description": "Essa é uma api para gerenciar a lista comercial contatos de seus usuários, com níveis de permissões e autenticação.",
		"contact": {
			"name": "Suport",
			"email": "vivy.saribeiro@gmail.com"
		},
		"x-logo": {
			"url": "https://github.com/vivyribeiro/blist-api/blob/main/documentation/logo.png?raw=true",
			"altText": "Blist logo"
		},
		"version": "1.0.0",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/license/mit/"
		}
	},
	"servers": [
		{
			"url": "http://localhost:3000",
			"description": "Ambiente de Desenvolmento"
		},
		{
			"url": "https://blist-api.onrender.com",
			"description": "Ambiente de Produção"
		}
	],
	"tags": [
		{
			"name": "users",
			"description": "Operações de usuário"
		},
		{
			"name": "session",
			"description": "Autenticação do usuário e entrada no sistema"
		},
		{
			"name": "reset and confirmation",
			"description": "Operações de recuperação e confirmação sobre a conta do usuário"
		},
		{
			"name": "contacts",
			"description": "Operações sobre os contatos do usuário"
		}
	],
	"paths": {
		"/users": {
			"post": {
				"tags": ["users"],
				"summary": "Criação de usuário",
				"description": "Cria um novo usuário. E o usuário recebe em seu e-mail um link de confirmação da conta válido por 1h, a fim de usufruir dos recursos da aplicação.",
				"requestBody": {
					"description": "Dados necessários para criar um novo usuário",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUser"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Cadastro do usuário feito com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Mensagem de sucesso",
											"example": "Usuário cadastrado com sucesso. Por favor, verifique seu e-mail"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dados imcompletos ou inválidos para cadastro",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidRequiredBody"
								}
							}
						}
					},
					"409": {
						"description": "Já existe um usuário com o email/telefone informado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserConflictData"
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["users"],
				"summary": "Listagem dos usuários cadastrados",
				"description": "Lista de usuários. Rota permitida somente por administradores.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{ "$ref": "#/components/parameters/offsetParam" },
					{ "$ref": "#/components/parameters/limitParam" }
				],
				"responses": {
					"200": {
						"description": "Listagem de usuários com acesso permitido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/examples/usersPagination"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"patch": {
				"tags": ["users"],
				"summary": "Atualização de usuário",
				"description": "Atualiza um usuário. O admin pode atualizar qualquer usuário, já outro tipo de usuário só pode atualizar ele mesmo.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id do usuário",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Dados permitidos para atualização do usuário",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUser"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Usuário atualizado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResponseUser"
								}
							}
						}
					},
					"400": {
						"description": "Dados imcompletos ou inválidos para cadastro",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidOptionalBody"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserNotFound"
								}
							}
						}
					},
					"409": {
						"description": "Já existe um usuário com o email/telefone informado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserConflictData"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["users"],
				"summary": "Deleção de usuário",
				"description": "Desabilita o usuário com o id enviado na rota. O admin pode desabilitar qualquer usuário, já outro tipo de usuário só pode desabilitar ele mesmo.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id do usuário",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "Usuário desativado"
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserNotFound"
								}
							}
						}
					},
					"409": {
						"description": "Usuário já desativado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Mensagem de erro",
											"example": "Usuário já desativado"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/users/{id}/report": {
			"get": {
				"tags": ["users"],
				"summary": "Relatório do usuário",
				"description": "É gerado um relatório em pdf dos contatos cadastrados pelo usuário. O admin pode solicitar o relátorio de qualquer usuário, já outro tipo de usuário só pode solicitar um relatório sobre ele mesmo.",
				"produces": ["application/pdf"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id do usuário",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "PDF com a listagem do usuário e seus contatos cadastrados",
						"headers": {
							"Content-Disposition": {
								"schema": {
									"type": "string",
									"example": "filename=\"Relatório.pdf"
								}
							}
						},
						"content": {
							"application/pdf": {
								"schema": {
									"type": "file",
									"format": "binary",
									"example": "Relatório.pdf"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserNotFound"
								}
							}
						}
					}
				}
			}
		},
		"/confirm_email/{token}": {
			"get": {
				"tags": ["reset and confirmation"],
				"summary": "Confirmação da conta do usuário",
				"description": "O usuário recebe no e-mail cadastrado o link com um token de ativação, ao abrir o link ele confirma o e-mail e libera os recursos da aplicação para uso. O link é válido por 1h.",
				"parameters": [
					{
						"name": "token",
						"in": "path",
						"description": "Token para confirmação do email do usuário",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "E-mail verificado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"description": "Mensagem de sucesso",
									"properties": {
										"message": {
											"type": "string",
											"example": "E-mail verificado com sucesso"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Link inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidLink"
								}
							}
						}
					},
					"404": {
						"description": "Token não enviado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/TokenNotFound"
								}
							}
						}
					}
				}
			}
		},
		"/reset_password": {
			"post": {
				"tags": ["reset and confirmation"],
				"summary": "Solicitação de redefinição de senha do usuário",
				"description": "O usuário envia seu o e-mail para receber o link com o token para mudar sua senha.",
				"requestBody": {
					"description": "Dado necessário para a requisição",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "Dado da requisição",
								"properties": {
									"email": {
										"type": "string",
										"description": "Email de cadastro do usuário",
										"example": "vivy.saribeiro@gmail.com"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "E-mail enviado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"description": "Dado da requisição",
									"properties": {
										"message": {
											"type": "string",
											"description": "Mensagem de sucesso",
											"example": "E-mail enviado com sucesso"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dado incompleto ou incorreto",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidRequiredBody"
								}
							}
						}
					},
					"404": {
						"description": "Usuário não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/UserNotFound"
								}
							}
						}
					},
					"500": {
						"description": "E-mail não enviado",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"description": "Mensagem de erro",
									"properties": {
										"message": {
											"type": "string",
											"example": "Ocorreu um erro ao enviar o e-mail, tente mais tarde."
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/reset_password/{token}": {
			"patch": {
				"tags": ["reset and confirmation"],
				"summary": "Redefinição de senha do usuário",
				"description": "Por meio do token enviado e verificado, é possível o usuário mudar sua senha, enviado a nova na requisição. O link é válido por 1h.",
				"parameters": [
					{
						"name": "token",
						"in": "path",
						"description": "Token para redefinição de senha",
						"required": true,
						"type": "http",
						"format": "JWT"
					}
				],
				"requestBody": {
					"description": "Dado necessário para a requisição",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "Dado da requisição",
								"properties": {
									"password": {
										"type": "string",
										"description": "Nova senha do usuário",
										"example": "T&st123"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Senha atualizada com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"description": "Dado da requisição",
									"properties": {
										"message": {
											"type": "string",
											"description": "Mensagem de sucesso",
											"example": "Senha atualizada com sucesso"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Dados incompleto ou incorreto",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"description": "Mensagem de erro",
									"properties": {
										"[key: password]": {
											"type": "array",
											"items": {
												"type": "string",
												"example": "Obrigatório"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Link inválido ou expirado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidLink"
								}
							}
						}
					},
					"404": {
						"description": "Token não enviado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/TokenNotFound"
								}
							}
						}
					}
				}
			}
		},
		"/login": {
			"post": {
				"tags": ["session"],
				"summary": "Entrada do usuário do sistema",
				"description": "Autenticação do usuário por meio das suas credenciais. Caso o usúario ao fazer login tiver sido desativado, o mesmo é reativado automativamente.",
				"requestBody": {
					"description": "Dados necessários para entrar no sistema",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginUser"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Credenciais do usuário válidas",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/userLoginResponse"
								}
							}
						}
					},
					"400": {
						"description": "Dados incompletos ou incorretos",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidRequiredBody"
								}
							}
						}
					},
					"401": {
						"description": "Credenciais inválidas",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string",
											"description": "Mensagem de erro",
											"example": "O e-mail ou a senha é inválida"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/profile": {
			"get": {
				"tags": ["session"],
				"summary": "Perfil do usuário",
				"description": "Retorna os dados do usuário autenticado. Rota pode ser utilizado como autologin.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Usuário autenticado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResponseUser"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					}
				}
			}
		},
		"/contacts": {
			"post": {
				"tags": ["contacts"],
				"summary": "Criação de contatos do usuário",
				"description": "Cria novos contatos para um usuário. Usuário identificado pelo token.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Dados necessários para criação de contatos",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateContact"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Cadastro do contato feito com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResponseContact"
								}
							}
						}
					},
					"400": {
						"description": "Dados imcompletos ou inválidos para cadastro",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidRequiredBody"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"409": {
						"description": "Já existe um contato desse usuário com o email/telefone informado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ContactConflictData"
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": ["contacts"],
				"summary": "Listagem dos contatos cadastrados",
				"description": "Lista de contatos existentes. Rota permitida somente por administradores.",
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{ "$ref": "#/components/parameters/offsetParam" },
					{ "$ref": "#/components/parameters/limitParam" }
				],
				"responses": {
					"200": {
						"description": "Listagem de contatos com acesso permitido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/examples/contactsPagination"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					}
				}
			}
		},
		"/contacts/{id}": {
			"patch": {
				"tags": ["contacts"],
				"summary": "Atualização de contato",
				"description": "Atualiza um contato.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id do contato",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"description": "Dados permitidos para atualização do contato",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateContact"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Contato atualizado com sucesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ResponseContact"
								}
							}
						}
					},
					"400": {
						"description": "Dados imcompletos ou inválidos para atualização",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidOptionalBody"
								}
							}
						}
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					},
					"404": {
						"description": "Contato não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ContactNotFound"
								}
							}
						}
					},
					"409": {
						"description": "Já existe um contato desse usuário com o email/telefone informado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ContactConflictData"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["contacts"],
				"summary": "Deleção de contato",
				"description": "Deleta o contato do usuário com o id enviado na rota. O admin pode deletar um contato de qualquer usuário, já outro tipo de usuário só pode deletar seus próprios contatos.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id do contato",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"204": {
						"description": "Contato deletado"
					},
					"401": {
						"description": "Token não enviado ou inválido",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/InvalidToken"
								}
							}
						}
					},
					"403": {
						"description": "Usuário sem permissão de acesso",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ForbiddenAction"
								}
							}
						}
					},
					"404": {
						"description": "Contato não encontrado",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/ContactNotFound"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"parameters": {
			"offsetParam": {
				"in": "query",
				"name": "page",
				"schema": {
					"type": "number",
					"minimum": 1,
					"default": 1,
					"description": "O número da página a uma ser mostrada. Por padrão inicia na 1ª página."
				}
			},
			"limitParam": {
				"in": "query",
				"name": "perPage",
				"schema": {
					"type": "number",
					"minimum": 1,
					"default": 2,
					"description": "A quantidade de itens a serem mostrados. Por padrão a quantidade por página é 2 itens."
				}
			}
		},
		"schemas": {
			"CreateUser": {
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string",
						"description": "Nome completo do usuário",
						"example": "Viviane Ribeiro"
					},
					"email": {
						"type": "string",
						"description": "Email de cadastro do usuário",
						"example": "vivy.saribeiro@gmail.com"
					},
					"password": {
						"type": "string",
						"description": "Password de cadastro do usuário",
						"example": "pa55w0rd"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone de contato do usuário",
						"example": "75988445566"
					},
					"role": {
						"type": "string",
						"enum": ["admin", "client"],
						"description": "Papel do usuário no sistema. Usuário padrão é \"client\"",
						"example": "admin"
					}
				},
				"required": ["fullName", "email", "password", "telephone"]
			},
			"UpdateUser": {
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string",
						"description": "Nome a ser atualizado",
						"example": "Viviane Ribeiro"
					},
					"email": {
						"type": "string",
						"description": "Email  a ser atualizado",
						"example": "vivy.saribeiro@gmail.com"
					},
					"password": {
						"type": "string",
						"description": "Password  a ser atualizado",
						"example": "pa55w0rd"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone a ser atualizado",
						"example": "75988445566"
					}
				}
			},
			"ResponseUser": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Identificador único do usuário",
						"example": "d4a10c9a-075e-492d-8c16-a2e5020aeb85"
					},
					"fullName": {
						"type": "string",
						"description": "Nome completo do usuário",
						"example": "Viviane Ribeiro"
					},
					"email": {
						"type": "string",
						"description": "Email de cadastro do usuário",
						"example": "vivy.saribeiro@gmail.com"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone de contato do usuário",
						"example": "75988445566"
					},
					"role": {
						"enum": ["admin", "client"],
						"description": "Papel do usuário no sistema",
						"example": "admin"
					},
					"createdAt": {
						"type": "string",
						"description": "Data do cadastro do usuário",
						"example": "2023-03-27"
					},
					"updatedAt": {
						"type": "string",
						"description": "Data de atualização feita no cadastro do usuário. Recebe o mesmo valor do \"createdAt\" na sua criação",
						"example": "2023-03-27"
					},
					"deletedAt": {
						"type": "string",
						"description": "Data em que a conta do usuário foi desativada, na sua criação recebe o valor null",
						"example": null
					},
					"contacts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ResponseContact"
						}
					}
				}
			},
			"LoginUser": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"description": "Email de cadastro do usuário",
						"example": "vivy.saribeiro@gmail.com"
					},
					"password": {
						"type": "string",
						"description": "Password de cadastro do usuário",
						"example": "pa55w0rd"
					}
				},
				"required": ["email", "password"]
			},
			"userLoginResponse": {
				"type": "object",
				"properties": {
					"token": {
						"type": "string",
						"format": "JWT",
						"description": "Token JWT",
						"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
					},
					"user": {
						"$ref": "#/components/schemas/ResponseUser"
					}
				}
			},
			"CreateContact": {
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string",
						"description": "Nome completo do contato",
						"example": "Miguel Sousa"
					},
					"email": {
						"type": "string",
						"description": "Email do contato",
						"example": "miguel.sousa@gmail.com"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone do contato",
						"example": "75991144557"
					}
				},
				"required": ["fullName", "email", "telephone"]
			},
			"ResponseContact": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Identificador único do contato",
						"example": "8ae6aa11-8c0f-4908-9e6a-35e7571d59ed"
					},
					"fullName": {
						"type": "string",
						"description": "Nome completo do contato",
						"example": "Miguel Sousa"
					},
					"email": {
						"type": "string",
						"description": "Email do contato",
						"example": "miguel.sousa@gmail.com"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone do contato",
						"example": "75991144557"
					},
					"createdAt": {
						"type": "string",
						"description": "Data do cadastro do contato",
						"example": "2023-03-27"
					},
					"updatedAt": {
						"type": "string",
						"description": "Data de atualização feita no contato. Recebe o mesmo valor do \"createdAt\" na sua criação",
						"example": "2023-03-27"
					}
				}
			},
			"UpdateContact": {
				"type": "object",
				"properties": {
					"fullName": {
						"type": "string",
						"description": "Nome a ser atualizado",
						"example": "Miguel Sousa"
					},
					"email": {
						"type": "string",
						"description": "Email  a ser atualizado",
						"example": "miguel.sousa@gmail.com"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone a ser atualizado",
						"example": "75991144557"
					}
				}
			},
			"userContact": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Identificador único do contato",
						"example": "8ae6aa11-8c0f-4908-9e6a-35e7571d59ed"
					},
					"fullName": {
						"type": "string",
						"description": "Nome completo do contato",
						"example": "Miguel Sousa"
					},
					"email": {
						"type": "string",
						"description": "Email do contato",
						"example": "miguel.sousa@gmail.com"
					},
					"telephone": {
						"type": "string",
						"description": "Telefone do contato",
						"example": "75991144557"
					},
					"createdAt": {
						"type": "string",
						"description": "Data do cadastro do contato",
						"example": "2023-03-27"
					},
					"updatedAt": {
						"type": "string",
						"description": "Data de atualização feita no contato. Recebe o mesmo valor do \"createdAt\" na sua criação",
						"example": "2023-03-27"
					},
					"user": {
						"$ref": "#/components/schemas/ResponseUser"
					}
				}
			}
		},
		"responses": {
			"InvalidRequiredBody": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"[key: email]": {
						"type": "array",
						"items": {
							"type": "string",
							"example": "Obrigatório"
						}
					}
				}
			},
			"InvalidOptionalBody": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Campos inválidos. Deve conter pelo menos um desses campos: fullName, email..."
					}
				}
			},
			"InvalidToken": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Token não enviado ou inválido"
					}
				}
			},
			"UserNotFound": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Usuário não encontrado"
					}
				}
			},
			"ContactNotFound": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Contato não encontrado"
					}
				}
			},
			"ForbiddenAction": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Você não tem permissão de executar está ação"
					}
				}
			},
			"UserConflictData": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Já existe um usuário com o email/telefone informado"
					}
				}
			},
			"ContactConflictData": {
				"type": "object",
				"description": "Mensagem de erro",
				"properties": {
					"message": {
						"type": "string",
						"example": "Já existe um contato desse usuário com o email/telefone informado"
					}
				}
			},
			"TokenNotFound": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Mensagem de erro",
						"example": "Token não foi encontrado"
					}
				}
			},
			"InvalidLink": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"description": "Mensagem de erro",
						"example": "Link inválido ou expirado"
					}
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"description": "Autenticação do usuário utilizando JWT",
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"examples": {
			"usersPagination": {
				"type": "object",
				"properties": {
					"previousPage": {
						"type": "string",
						"description": "O endereço da página anterior à exibida. Se não houver página anterior recebe o valor de null.",
						"example": null
					},
					"nextPage": {
						"type": "string",
						"description": "O endereço da próxima página à exibida. Se não houver próxima página recebe o valor de null.",
						"example": null
					},
					"count": {
						"type": "number",
						"description": "Total de itens a serem mostrados",
						"example": 1
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ResponseUser"
						}
					}
				}
			},
			"contactsPagination": {
				"type": "object",
				"properties": {
					"previousPage": {
						"type": "string",
						"description": "O endereço da página anterior à exibida. Se não houver página anterior recebe o valor de null.",
						"example": null
					},
					"nextPage": {
						"type": "string",
						"description": "O endereço da próxima página à exibida. Se não houver próxima página recebe o valor de null.",
						"example": null
					},
					"count": {
						"type": "number",
						"description": "Total de itens a serem mostrados",
						"example": 1
					},
					"data": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/userContact"
						}
					}
				}
			}
		}
	}
}
